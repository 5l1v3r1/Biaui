<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:internals="clr-namespace:Biaui.Internals"
                    xmlns:biaui="clr-namespace:Biaui"
                    xmlns:controls="clr-namespace:Biaui.Controls">

    <Style TargetType="{x:Type Menu}">
        <Setter Property="FontFamily" Value="{DynamicResource BiauiFontFamily}" />
        <Setter Property="Background" Value="Transparent" />

        <Style.Resources>
            <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
                <Setter Property="Height" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Separator}">
                            <Rectangle Fill="{DynamicResource MenuSeparatorBorderBrush}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type MenuItem}">
                <Setter Property="Foreground"
                        Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Menu}}}" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Border x:Name="Border"
                                    Background="Transparent"
                                    BorderThickness="0">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="ColumnIcon"
                                                          Width="Auto"
                                                          MinWidth="20"
                                                          SharedSizeGroup="ColumnGroupIcon" />
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="ColumnGroupHeader" />
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="ColumnGroupInputGesture" />
                                        <ColumnDefinition x:Name="ColumnArrow" Width="14" />
                                    </Grid.ColumnDefinitions>

                                    <ContentPresenter x:Name="IconPresenter"
                                                      Grid.Column="0"
                                                      VerticalAlignment="Center"
                                                      ContentSource="Icon" />

                                    <ContentPresenter Grid.Column="1"
                                                      Margin="{TemplateBinding Padding}"
                                                      VerticalAlignment="Center"
                                                      ContentSource="Header"
                                                      RecognizesAccessKey="True" />

                                    <ContentPresenter x:Name="InputGesturePresenter"
                                                      Grid.Column="2"
                                                      Margin="24,1,8,1"
                                                      VerticalAlignment="Center"
                                                      ContentSource="InputGestureText" />

                                    <Path x:Name="Arrow"
                                          Grid.Column="3"
                                          Margin="4,0,6,0"
                                          HorizontalAlignment="Right"
                                          VerticalAlignment="Center"
                                          Data="M 4 0 L 8 4 L 4 8 Z"
                                          Fill="{DynamicResource ForegroundBrushKey}" />

                                    <Popup x:Name="SubMenuPopup"
                                           Grid.Column="0"
                                           AllowsTransparency="True"
                                           Focusable="False"
                                           HorizontalOffset="-1"
                                           IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                           Placement="Right"
                                           PopupAnimation="None"
                                           SnapsToDevicePixels="True"
                                           UseLayoutRounding="True">

                                        <controls:ClippingBorder Margin="0,0,8,8"
                                                                 Background="{DynamicResource SubmenuItemBackground}"
                                                                 BorderBrush="{DynamicResource MenuItemHighlightedBackground}"
                                                                 BorderThickness="1"
                                                                 SnapsToDevicePixels="True"
                                                                 UseLayoutRounding="True">
                                            <StackPanel Grid.IsSharedSizeScope="True"
                                                        IsItemsHost="True"
                                                        KeyboardNavigation.DirectionalNavigation="Cycle" />

                                            <Border.Effect>
                                                <DropShadowEffect ShadowDepth="2" Color="Black" />
                                            </Border.Effect>
                                        </controls:ClippingBorder>
                                    </Popup>
                                </Grid>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="Role" Value="TopLevelHeader">
                                    <Setter Property="Padding" Value="8,0,8,2" />
                                    <Setter TargetName="SubMenuPopup" Property="Placement" Value="Bottom" />
                                    <Setter TargetName="ColumnIcon" Property="MinWidth" Value="0" />
                                    <Setter TargetName="ColumnArrow" Property="Width" Value="Auto" />
                                    <Setter TargetName="IconPresenter" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="InputGesturePresenter" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="Arrow" Property="Visibility" Value="Collapsed" />
                                </Trigger>

                                <Trigger Property="Role" Value="TopLevelItem">
                                    <Setter Property="Padding" Value="8,0,8,2" />
                                    <Setter TargetName="ColumnIcon" Property="MinWidth" Value="0" />
                                    <Setter TargetName="ColumnArrow" Property="Width" Value="Auto" />
                                    <Setter TargetName="IconPresenter" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="InputGesturePresenter" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="Arrow" Property="Visibility" Value="Collapsed" />
                                </Trigger>

                                <Trigger Property="Role" Value="SubmenuHeader">
                                    <Setter Property="DockPanel.Dock" Value="Top" />
                                    <Setter Property="Padding" Value="12,4,0,4" />
                                    <Setter TargetName="Border" Property="MinHeight" Value="24" />
                                    <Setter TargetName="Border" Property="Background"
                                            Value="{DynamicResource SubmenuItemBackground}" />
                                </Trigger>

                                <Trigger Property="Role" Value="SubmenuItem">
                                    <Setter Property="DockPanel.Dock" Value="Top" />
                                    <Setter Property="Padding" Value="12,4,0,4" />
                                    <Setter TargetName="Arrow" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="Border" Property="MinHeight" Value="24" />
                                    <Setter TargetName="Border" Property="Background"
                                            Value="{DynamicResource SubmenuItemBackground}" />
                                </Trigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsHighlighted" Value="True" />
                                        <Condition Property="Role" Value="TopLevelHeader" />
                                    </MultiTrigger.Conditions>

                                    <Setter TargetName="Border" Property="Background"
                                            Value="{DynamicResource MenuItemHighlightedBackground}" />
                                </MultiTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsHighlighted" Value="True" />
                                        <Condition Property="Role" Value="TopLevelItem" />
                                    </MultiTrigger.Conditions>

                                    <Setter TargetName="Border" Property="Background"
                                            Value="{DynamicResource MenuItemHighlightedBackground}" />
                                </MultiTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsHighlighted" Value="True" />
                                        <Condition Property="Role" Value="SubmenuHeader" />
                                    </MultiTrigger.Conditions>

                                    <Setter TargetName="Border" Property="Background"
                                            Value="{DynamicResource SubmenuItemBackgroundHighlighted}" />
                                </MultiTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsHighlighted" Value="True" />
                                        <Condition Property="Role" Value="SubmenuItem" />
                                    </MultiTrigger.Conditions>

                                    <Setter TargetName="Border" Property="Background"
                                            Value="{DynamicResource SubmenuItemBackgroundHighlighted}" />
                                </MultiTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSubmenuOpen" Value="True" />
                                        <Condition Property="Role" Value="TopLevelHeader" />
                                    </MultiTrigger.Conditions>

                                    <Setter TargetName="Border" Property="Background"
                                            Value="{DynamicResource SubmenuItemBackground}" />
                                    <Setter TargetName="Border" Property="BorderBrush"
                                            Value="{DynamicResource MenuSeparatorBorderBrush}" />
                                </MultiTrigger>

                                <Trigger Property="IsSubmenuOpen" Value="True">
                                    <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource AccentBrushKey}" />
                                </Trigger>

                                <Trigger Property="Icon" Value="{x:Null}">
                                    <Setter TargetName="IconPresenter" Property="Visibility" Value="Collapsed" />
                                </Trigger>

                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{DynamicResource InactiveForegroundBrushKey}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
    </Style>
</ResourceDictionary>