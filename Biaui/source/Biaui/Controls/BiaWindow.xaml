<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Biaui.Controls"
                    xmlns:internals="clr-namespace:Biaui.Controls.Internals"
                    xmlns:biaui="clr-namespace:Biaui">
    <Style TargetType="{x:Type controls:BiaWindow}">
        <Setter Property="SnapsToDevicePixels" Value="{x:Static biaui:Boxes.BoolTrue}" />
        <Setter Property="UseLayoutRounding" Value="{x:Static biaui:Boxes.BoolTrue}" />
        <Setter Property="FontFamily" Value="{DynamicResource BiauiFontFamily}" />

        <Setter Property="TextOptions.TextRenderingMode" Value="Auto" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
        <Setter Property="TextOptions.TextHintingMode" Value="Animated" />

        <Setter Property="ToolTipService.InitialShowDelay" Value="{x:Static biaui:Boxes.Int0}" />
        <Setter Property="ToolTipService.ShowDuration" Value="100000" />
        <Setter Property="ToolTipService.BetweenShowDelay" Value="{x:Static biaui:Boxes.Int0}" />

        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CaptionHeight="{x:Static biaui:Boxes.Double32}"
                              CornerRadius="{x:Static biaui:Boxes.CornerRadius0}"
                              GlassFrameThickness="{x:Static biaui:Boxes.Thickness1}"
                              ResizeBorderThickness="{x:Static biaui:Boxes.Thickness8}" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:BiaWindow}">
                    <AdornerDecorator>
                        <Border x:Name="Border"
                                Background="{DynamicResource BackgroundBackgroundBrushKey}"
                                BorderThickness="{x:Static biaui:Boxes.Thickness1}">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="BorderBrush" Value="{DynamicResource AccentBrushKey}" />

                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="{x:Static biaui:Boxes.BoolFalse}">
                                            <Setter Property="BorderBrush" Value="{DynamicResource BackgroundBorderBrushKey}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>

                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="24" />
                                    <RowDefinition Height="24" />
                                    <RowDefinition Height="{x:Static biaui:Boxes.GridLengthStar}" />
                                </Grid.RowDefinitions>

                                <!--  Title Background -->
                                <Rectangle Grid.Row="{x:Static biaui:Boxes.Int0}"
                                           Grid.RowSpan="{x:Static biaui:Boxes.Int2}"
                                           Margin="{x:Static biaui:Boxes.Thickness0}"
                                           Fill="#303038"
                                           StrokeThickness="{x:Static biaui:Boxes.Double0}" />

                                <!--  Icon  -->
                                <Rectangle Grid.Row="{x:Static biaui:Boxes.Int0}"
                                           Grid.RowSpan="{x:Static biaui:Boxes.Int2}"
                                           Width="{x:Static biaui:Boxes.Double36}"
                                           Height="{x:Static biaui:Boxes.Double36}"
                                           Margin="6,6,0,0"
                                           HorizontalAlignment="{x:Static biaui:Boxes.HorizontalAlignmentLeft}"
                                           VerticalAlignment="{x:Static biaui:Boxes.VerticalAlignmentTop}"
                                           Fill="{Binding Icon, RelativeSource={RelativeSource AncestorType={x:Type controls:BiaWindow}}}" />

                                <!--  Title  -->
                                <TextBlock Grid.Row="{x:Static biaui:Boxes.Int0}"
                                           Grid.RowSpan="{x:Static biaui:Boxes.Int2}"
                                           Margin="47,1,0,0"
                                           FontSize="18"
                                           Text="{TemplateBinding Title}">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Foreground" Value="{DynamicResource AccentForegroundBrushKey}" />

                                            <Style.Triggers>
                                                <Trigger Property="IsEnabled" Value="{x:Static biaui:Boxes.BoolFalse}">
                                                    <Setter Property="Foreground" Value="{DynamicResource InactiveForegroundBrushKey}" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>

                                <!--  Menu  -->
                                <ContentControl Grid.Row="{x:Static biaui:Boxes.Int1}"
                                                Grid.RowSpan="{x:Static biaui:Boxes.Int2}"
                                                Margin="47,0,0,0"
                                                HorizontalAlignment="{x:Static biaui:Boxes.HorizontalAlignmentLeft}"
                                                VerticalAlignment="{x:Static biaui:Boxes.VerticalAlignmentTop}"
                                                Content="{Binding Menu, RelativeSource={RelativeSource AncestorType={x:Type controls:BiaWindow}}}"
                                                WindowChrome.IsHitTestVisibleInChrome="{x:Static biaui:Boxes.BoolTrue}" />

                                <ContentPresenter x:Name="ContentPresenter"
                                                  Grid.Row="{x:Static biaui:Boxes.Int2}"
                                                  HorizontalAlignment="{x:Static biaui:Boxes.HorizontalAlignmentStretch}"
                                                  VerticalAlignment="{x:Static biaui:Boxes.VerticalAlignmentStretch}" />

                                <!--  Shadow  -->
                                <Rectangle Grid.Row="{x:Static biaui:Boxes.Int0}"
                                           Grid.RowSpan="{x:Static biaui:Boxes.Int3}"
                                           Height="{x:Static biaui:Boxes.Double5}"
                                           Margin="0,48,0,0"
                                           VerticalAlignment="{x:Static biaui:Boxes.VerticalAlignmentTop}"
                                           IsHitTestVisible="{x:Static biaui:Boxes.BoolFalse}">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                            <GradientStop Offset="0.0" Color="#FF181818" />
                                            <GradientStop Offset="1.0" Color="#00181818" />
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>

                                <!--  System Button  -->
                                <StackPanel Grid.Row="{x:Static biaui:Boxes.Int0}"
                                            Grid.RowSpan="{x:Static biaui:Boxes.Int2}"
                                            HorizontalAlignment="{x:Static biaui:Boxes.HorizontalAlignmentRight}"
                                            VerticalAlignment="{x:Static biaui:Boxes.VerticalAlignmentTop}"
                                            Orientation="Horizontal">
                                    <internals:SystemButton IsVisibleButton="{TemplateBinding IsVisibleMinimizeButton}" WindowAction="{x:Static biaui:Boxes.WindowActionMinimize}" />
                                    <internals:SystemButton IsVisibleButton="{TemplateBinding IsVisibleMaximizeButton}" WindowAction="{x:Static biaui:Boxes.WindowActionMaximize}" />
                                    <internals:SystemButton IsVisibleButton="{TemplateBinding IsVisibleNormalizeButton}" WindowAction="{x:Static biaui:Boxes.WindowActionNormalize}" />
                                    <internals:SystemButton IsVisibleButton="{TemplateBinding IsVisibleCloseButtonButton}" WindowAction="{x:Static biaui:Boxes.WindowActionClose}" />
                                </StackPanel>
                            </Grid>
                        </Border>
                    </AdornerDecorator>

                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="Border" Property="BorderThickness" Value="{x:Static biaui:Boxes.Thickness8}" />
                        </Trigger>
                        <Trigger Property="WindowState" Value="Normal">
                            <Setter TargetName="Border" Property="BorderThickness" Value="{x:Static biaui:Boxes.Thickness1}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="{x:Static biaui:Boxes.BoolFalse}">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard TargetName="ContentPresenter">
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         To="0.5"
                                                         Duration="0:0:0.15" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard TargetName="ContentPresenter">
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         To="{x:Static biaui:Boxes.Double1}"
                                                         Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>