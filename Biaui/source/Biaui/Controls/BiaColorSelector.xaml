<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:biaui="clr-namespace:Biaui"
                    xmlns:controls="clr-namespace:Biaui.Controls"
                    xmlns:converters="clr-namespace:Biaui.Controls.Converters">

    <Style TargetType="{x:Type controls:BiaColorSelector}">
        <Setter Property="BorderColor" Value="{DynamicResource TextBoxBorderColorKey}" />
        <Setter Property="Width" Value="{x:Static biaui:Boxes.Double36}" />
        <Setter Property="Height" Value="{x:Static biaui:Boxes.BasicOneLineHeight}" />
        <Setter Property="CornerRadius" Value="{x:Static biaui:Boxes.BasicCornerRadiusPrim}" />
        <Setter Property="Cursor" Value="Hand" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="{x:Static biaui:Boxes.BoolTrue}">
                <Setter Property="BorderColor" Value="{DynamicResource ButtonActiveBorderBrushKey.IsMouseOver}" />
            </Trigger>

            <Trigger Property="IsEnabled" Value="{x:Static biaui:Boxes.BoolFalse}">
                <Setter Property="BorderColor" Value="{DynamicResource InactiveBorderColorKey}" />
            </Trigger>
        </Style.Triggers>

        <Style.Resources>
            <converters:DoubleColorToBrushConverter x:Key="ToBrush" />

            <DataTemplate DataType="{x:Type biaui:DoubleColor}">
                <Grid Width="48" Height="{x:Static biaui:Boxes.Double32}">
                    <Border Background="{DynamicResource CheckerBrush}" />
                    <Border Background="{Binding Converter={StaticResource ToBrush}, Mode=OneWay}" />
                </Grid>
            </DataTemplate>

            <Style TargetType="{x:Type ListBox}">
                <Setter Property="Background" Value="{DynamicResource PanelBackgroundBrushKey}" />
                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrushKey}" />
                <Setter Property="BorderThickness" Value="{x:Static biaui:Boxes.Thickness1}" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />

                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <UniformGrid Columns="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:BiaColorSelector}}, Mode=OneWay, Path=Columns}" />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>

                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="SnapsToDevicePixels" Value="{x:Static biaui:Boxes.BoolTrue}" />
                            <Setter Property="OverridesDefaultStyle" Value="{x:Static biaui:Boxes.BoolTrue}" />
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrushKey}" />
                            <Setter Property="BorderThickness" Value="{x:Static biaui:Boxes.Thickness1}" />
                            <Setter Property="HorizontalAlignment" Value="{x:Static biaui:Boxes.HorizontalAlignmentStretch}" />
                            <Setter Property="VerticalAlignment" Value="{x:Static biaui:Boxes.VerticalAlignmentStretch}" />
                            <Setter Property="HorizontalContentAlignment" Value="{x:Static biaui:Boxes.HorizontalAlignmentStretch}" />
                            <Setter Property="VerticalContentAlignment" Value="{x:Static biaui:Boxes.VerticalAlignmentStretch}" />
                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
                            <Setter Property="Cursor" Value="Hand" />

                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                            <ContentPresenter />
                                        </Border>

                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected" Value="{x:Static biaui:Boxes.BoolTrue}">
                                                <Setter Property="BorderBrush" Value="GhostWhite" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>

                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="{x:Static biaui:Boxes.BoolTrue}">
                                    <Setter Property="IsSelected" Value="{x:Static biaui:Boxes.BoolTrue}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Setter.Value>
                </Setter>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBox}">
                            <controls:BiaClippingBorder MaxHeight="414"
                                                        Background="{DynamicResource SubmenuItemBackground}"
                                                        BorderBrush="{DynamicResource MenuItemHighlightedBackground}"
                                                        BorderThickness="{x:Static biaui:Boxes.Thickness1}"
                                                        CornerRadius="{x:Static biaui:Boxes.BasicCornerRadius}">
                                <ScrollViewer Focusable="{x:Static biaui:Boxes.BoolFalse}">
                                    <ItemsPresenter Margin="{x:Static biaui:Boxes.Thickness2}" />
                                </ScrollViewer>
                            </controls:BiaClippingBorder>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
    </Style>
</ResourceDictionary>