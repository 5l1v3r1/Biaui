<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:colorPicker="clr-namespace:Biaui.Controls"
                    xmlns:internals="clr-namespace:Biaui.Controls.Internals">
    <Style x:Key="DialogWindowStyle" TargetType="{x:Type colorPicker:BiaWindow}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="FontFamily" Value="{DynamicResource BiauiFontFamily}" />

        <Setter Property="TextOptions.TextRenderingMode" Value="Auto" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
        <Setter Property="TextOptions.TextHintingMode" Value="Animated" />

        <Setter Property="ToolTipService.InitialShowDelay" Value="0" />
        <Setter Property="ToolTipService.ShowDuration" Value="100000" />
        <Setter Property="ToolTipService.BetweenShowDelay" Value="0" />

        <Setter Property="IsVisibleMaximizeButton" Value="False" />
        <Setter Property="IsVisibleMinimizeButton" Value="False" />
        <Setter Property="IsVisibleNormalizeButton" Value="False" />

        <Setter Property="ShowInTaskbar" Value="False" />

        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CaptionHeight="32"
                              CornerRadius="0"
                              GlassFrameThickness="1"
                              ResizeBorderThickness="8" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type colorPicker:BiaWindow}">
                    <Border x:Name="Border"
                            Background="{DynamicResource BackgroundBackgroundBrushKey}"
                            BorderThickness="1">
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="BorderBrush" Value="{DynamicResource AccentBrushKey}" />

                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="BorderBrush" Value="{DynamicResource BackgroundBorderBrushKey}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>

                        <Grid>
                            <ContentPresenter x:Name="ContentPresenter"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="Stretch" />

                            <StackPanel HorizontalAlignment="Right"
                                        VerticalAlignment="Top"
                                        Orientation="Horizontal">
                                <internals:SystemButton IsVisibleButton="{TemplateBinding IsVisibleMinimizeButton}" WindowAction="Minimize" />
                                <internals:SystemButton IsVisibleButton="{TemplateBinding IsVisibleMaximizeButton}" WindowAction="Maximize" />
                                <internals:SystemButton IsVisibleButton="{TemplateBinding IsVisibleNormalizeButton}" WindowAction="Normalize" />
                                <internals:SystemButton IsVisibleButton="{TemplateBinding IsVisibleCloseButtonButton}" WindowAction="Close" />
                            </StackPanel>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="Border" Property="BorderThickness" Value="8" />
                        </Trigger>
                        <Trigger Property="WindowState" Value="Normal">
                            <Setter TargetName="Border" Property="BorderThickness" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ContentPresenter" Property="Opacity" Value="0.25" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TemplatedDialogWindowStyle" TargetType="{x:Type colorPicker:BiaWindow}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="FontFamily" Value="{DynamicResource BiauiFontFamily}" />

        <Setter Property="TextOptions.TextRenderingMode" Value="Auto" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
        <Setter Property="TextOptions.TextHintingMode" Value="Animated" />

        <Setter Property="ToolTipService.InitialShowDelay" Value="0" />
        <Setter Property="ToolTipService.ShowDuration" Value="100000" />
        <Setter Property="ToolTipService.BetweenShowDelay" Value="0" />

        <Setter Property="IsVisibleMaximizeButton" Value="False" />
        <Setter Property="IsVisibleMinimizeButton" Value="False" />
        <Setter Property="IsVisibleNormalizeButton" Value="False" />

        <Setter Property="ShowInTaskbar" Value="False" />

        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CaptionHeight="32"
                              CornerRadius="0"
                              GlassFrameThickness="1"
                              ResizeBorderThickness="8" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type colorPicker:BiaWindow}">
                    <Border x:Name="Border"
                            Background="{DynamicResource BackgroundBackgroundBrushKey}"
                            BorderThickness="1">
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="BorderBrush" Value="{DynamicResource AccentBrushKey}" />

                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="BorderBrush" Value="{DynamicResource BackgroundBorderBrushKey}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>

                        <Grid>
                            <ContentPresenter x:Name="ContentPresenter"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="Stretch"
                                              Content="{Binding Mode=OneWay}"
                                              ContentTemplate="{DynamicResource ControlTemplateKey}" />

                            <StackPanel HorizontalAlignment="Right"
                                        VerticalAlignment="Top"
                                        Orientation="Horizontal">
                                <internals:SystemButton IsVisibleButton="{TemplateBinding IsVisibleMinimizeButton}" WindowAction="Minimize" />
                                <internals:SystemButton IsVisibleButton="{TemplateBinding IsVisibleMaximizeButton}" WindowAction="Maximize" />
                                <internals:SystemButton IsVisibleButton="{TemplateBinding IsVisibleNormalizeButton}" WindowAction="Normalize" />
                                <internals:SystemButton IsVisibleButton="{TemplateBinding IsVisibleCloseButtonButton}" WindowAction="Close" />
                            </StackPanel>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="Border" Property="BorderThickness" Value="8" />
                        </Trigger>
                        <Trigger Property="WindowState" Value="Normal">
                            <Setter TargetName="Border" Property="BorderThickness" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ContentPresenter" Property="Opacity" Value="0.25" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



</ResourceDictionary>