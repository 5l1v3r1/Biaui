<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Biaui.Controls"
                    xmlns:internals="clr-namespace:Biaui.Controls.Internals"
                    xmlns:biaui="clr-namespace:Biaui">
    <Style x:Key="BiaWindowTemplatedDialogStyle" TargetType="{x:Type controls:BiaWindow}">
        <Setter Property="SnapsToDevicePixels" Value="{x:Static biaui:Boxes.BoolTrue}" />
        <Setter Property="UseLayoutRounding" Value="{x:Static biaui:Boxes.BoolTrue}" />
        <Setter Property="FontFamily" Value="{DynamicResource BiauiFontFamily}" />

        <Setter Property="TextOptions.TextRenderingMode" Value="Auto" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
        <Setter Property="TextOptions.TextHintingMode" Value="Animated" />

        <Setter Property="ToolTipService.InitialShowDelay" Value="{x:Static biaui:Boxes.Int0}" />
        <Setter Property="ToolTipService.ShowDuration" Value="100000" />
        <Setter Property="ToolTipService.BetweenShowDelay" Value="{x:Static biaui:Boxes.Int0}" />

        <Setter Property="IsVisibleMaximizeButton" Value="{x:Static biaui:Boxes.BoolFalse}" />
        <Setter Property="IsVisibleMinimizeButton" Value="{x:Static biaui:Boxes.BoolFalse}" />
        <Setter Property="IsVisibleNormalizeButton" Value="{x:Static biaui:Boxes.BoolFalse}" />

        <Setter Property="ShowInTaskbar" Value="{x:Static biaui:Boxes.BoolFalse}" />

        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CaptionHeight="{x:Static biaui:Boxes.Double32}"
                              CornerRadius="{x:Static biaui:Boxes.CornerRadius0}"
                              GlassFrameThickness="{x:Static biaui:Boxes.Thickness1}"
                              ResizeBorderThickness="{x:Static biaui:Boxes.Thickness8}" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:BiaWindow}">
                    <AdornerDecorator>
                        <Border x:Name="Border"
                                Background="{DynamicResource BackgroundBackgroundBrushKey}"
                                BorderThickness="{x:Static biaui:Boxes.Thickness1}">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="BorderBrush" Value="{DynamicResource AccentBrushKey}" />

                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="{x:Static biaui:Boxes.BoolFalse}">
                                            <Setter Property="BorderBrush" Value="{DynamicResource BackgroundBorderBrushKey}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>

                            <Grid>
                                <ContentPresenter x:Name="ContentPresenter"
                                                  HorizontalAlignment="{x:Static biaui:Boxes.HorizontalAlignmentStretch}"
                                                  VerticalAlignment="{x:Static biaui:Boxes.VerticalAlignmentStretch}"
                                                  Content="{Binding Mode=OneWay}"
                                                  ContentTemplate="{DynamicResource ControlTemplateKey}" />

                                <StackPanel HorizontalAlignment="{x:Static biaui:Boxes.HorizontalAlignmentRight}"
                                            VerticalAlignment="{x:Static biaui:Boxes.VerticalAlignmentTop}"
                                            Orientation="Horizontal">
                                    <internals:SystemButton IsVisibleButton="{TemplateBinding IsVisibleMinimizeButton}" WindowAction="Minimize" />
                                    <internals:SystemButton IsVisibleButton="{TemplateBinding IsVisibleMaximizeButton}" WindowAction="Maximize" />
                                    <internals:SystemButton IsVisibleButton="{TemplateBinding IsVisibleNormalizeButton}" WindowAction="Normalize" />
                                    <internals:SystemButton IsVisibleButton="{TemplateBinding IsVisibleCloseButtonButton}" WindowAction="Close" />
                                </StackPanel>
                            </Grid>
                        </Border>
                    </AdornerDecorator>

                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="Border" Property="BorderThickness" Value="{x:Static biaui:Boxes.Thickness8}" />
                        </Trigger>
                        <Trigger Property="WindowState" Value="Normal">
                            <Setter TargetName="Border" Property="BorderThickness" Value="{x:Static biaui:Boxes.Thickness1}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="{x:Static biaui:Boxes.BoolFalse}">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard TargetName="ContentPresenter">
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         To="0.5"
                                                         Duration="0:0:0.15" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard TargetName="ContentPresenter">
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         To="{x:Static biaui:Boxes.Double1}"
                                                         Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>