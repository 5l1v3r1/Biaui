<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Biaui.Controls"
                    xmlns:converter="clr-namespace:Biaui.Internals.Converter"
                    xmlns:internals="clr-namespace:Biaui.Internals"
                    xmlns:biaui="clr-namespace:Biaui">
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
        <Setter Property="Focusable" Value="{x:Static biaui:Boxes.BoolFalse}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Canvas Width="15"
                            Height="15"
                            Background="Transparent">
                        <Path x:Name="ExpandPath" Data="M 5.367188 10.363281 L 8.230469 7.5 L 5.367188 4.632812 L 6.25 3.75 L 10 7.5 L 6.25 11.25 Z M 5.367188 10.363281">
                            <Path.Style>
                                <Style TargetType="{x:Type Path}">
                                    <Setter Property="Fill" Value="{DynamicResource ForegroundBrushKey}" />
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="{x:Static biaui:Boxes.BoolFalse}">
                                            <Setter Property="Fill" Value="{DynamicResource InactiveForegroundBrushKey}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Path.Style>
                        </Path>
                    </Canvas>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="{x:Static biaui:Boxes.BoolTrue}">
                            <Setter TargetName="ExpandPath" Property="Data" Value="M 4.632812 5.363281 L 7.5 8.230469 L 10.367188 5.363281 L 11.25 6.25 L 7.5 10 L 3.75 6.25 Z M 4.632812 5.363281" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Visibility" Value="Visible" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:BiaTreeView}}, Mode=OneWay, Path=IsVisibleItemExpanderButton}" Value="{x:Static biaui:Boxes.BoolFalse}">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="0,0,0,0"
                                   Opacity="0"
                                   Stroke="White"
                                   StrokeDashArray="1 2"
                                   StrokeThickness="5" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TreeViewItemContainerStyle" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <ControlTemplate.Resources>
                        <converter:IndentToMargin x:Key="LengthConverter" />
                    </ControlTemplate.Resources>

                    <StackPanel>
                        <Border Name="Bd"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Grid.Style>
                                    <Style TargetType="{x:Type Grid}">
                                        <Setter Property="Margin">
                                            <Setter.Value>
                                                <MultiBinding Converter="{StaticResource LengthConverter}">
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" />
                                                    <Binding Path="IndentSize" RelativeSource="{RelativeSource AncestorType={x:Type controls:BiaTreeView}}" />
                                                </MultiBinding>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Grid.Style>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="19" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <!--  x:NameはBiaui.Internals.Constants.TreeViewItemExpanderName  -->
                                <ToggleButton x:Name="Expander"
                                              ClickMode="Press"
                                              IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                              Style="{StaticResource ExpandCollapseToggleStyle}" />

                                <ContentPresenter x:Name="PART_Header"
                                                  Grid.Column="1"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  ContentSource="Header" />
                            </Grid>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" />
                    </StackPanel>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="{x:Static biaui:Boxes.BoolFalse}">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <Trigger Property="HasItems" Value="{x:Static biaui:Boxes.BoolFalse}">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="{x:Static biaui:Boxes.BoolFalse}">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(internals:TreeViewHelper.IsMouseDirectlyOverItem)}" Value="{x:Static biaui:Boxes.BoolTrue}" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:BiaTreeView}}, Mode=OneWay, Path=IsSelectionEnabled}" Value="{x:Static biaui:Boxes.BoolTrue}" />
                            </MultiDataTrigger.Conditions>

                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource ActiveBackgroundBrushKey}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource ActiveBackgroundBrushKey}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(controls:BiaTreeView.IsSelected)}" Value="{x:Static biaui:Boxes.BoolTrue}" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:BiaTreeView}}, Mode=OneWay, Path=IsSelectionEnabled}" Value="{x:Static biaui:Boxes.BoolTrue}" />
                            </MultiDataTrigger.Conditions>

                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource Item.SelectedInactive.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource Item.SelectedInactive.Border}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(internals:TreeViewHelper.IsMouseDirectlyOverItem)}" Value="{x:Static biaui:Boxes.BoolTrue}" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(controls:BiaTreeView.IsSelected)}" Value="{x:Static biaui:Boxes.BoolTrue}" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:BiaTreeView}}, Mode=OneWay, Path=IsMouseOver}" Value="{x:Static biaui:Boxes.BoolTrue}" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:BiaTreeView}}, Mode=OneWay, Path=IsSelectionEnabled}" Value="{x:Static biaui:Boxes.BoolTrue}" />
                            </MultiDataTrigger.Conditions>

                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource Item.SelectedActive.Background.IsMouseOver}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource Item.SelectedActive.Border.IsMouseOver}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListBoxLikeTreeViewItemContainerStyle"
           BasedOn="{StaticResource TreeViewItemContainerStyle}"
           TargetType="{x:Type TreeViewItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Border Name="Bd"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter x:Name="PART_Header"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          ContentSource="Header" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="{x:Static biaui:Boxes.BoolFalse}">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(internals:TreeViewHelper.IsMouseDirectlyOverItem)}" Value="{x:Static biaui:Boxes.BoolTrue}" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:BiaTreeView}}, Mode=OneWay, Path=IsSelectionEnabled}" Value="{x:Static biaui:Boxes.BoolTrue}" />
                            </MultiDataTrigger.Conditions>

                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource ActiveBackgroundBrushKey}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource ActiveBackgroundBrushKey}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(controls:BiaTreeView.IsSelected)}" Value="{x:Static biaui:Boxes.BoolTrue}" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:BiaTreeView}}, Mode=OneWay, Path=IsSelectionEnabled}" Value="{x:Static biaui:Boxes.BoolTrue}" />
                            </MultiDataTrigger.Conditions>

                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource Item.SelectedInactive.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource Item.SelectedInactive.Border}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(internals:TreeViewHelper.IsMouseDirectlyOverItem)}" Value="{x:Static biaui:Boxes.BoolTrue}" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(controls:BiaTreeView.IsSelected)}" Value="{x:Static biaui:Boxes.BoolTrue}" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:BiaTreeView}}, Mode=OneWay, Path=IsMouseOver}" Value="{x:Static biaui:Boxes.BoolTrue}" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:BiaTreeView}}, Mode=OneWay, Path=IsSelectionEnabled}" Value="{x:Static biaui:Boxes.BoolTrue}" />
                            </MultiDataTrigger.Conditions>

                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource Item.SelectedActive.Background.IsMouseOver}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource Item.SelectedActive.Border.IsMouseOver}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultTreeViewStyle" TargetType="{x:Type controls:BiaTreeView}">
        <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundBrushKey}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrushKey}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource TextBoxForegroundBrushKey}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="{x:Static biaui:Boxes.BoolTrue}" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="{x:Static biaui:Boxes.BoolFalse}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />

        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="{x:Static biaui:Boxes.BoolTrue}" />
        <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling" />
        <Setter Property="VirtualizingStackPanel.CacheLength" Value="20,20" />
        <Setter Property="VirtualizingStackPanel.CacheLengthUnit" Value="Item" />

        <Setter Property="ItemContainerStyle" Value="{StaticResource TreeViewItemContainerStyle}" />

        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel CanVerticallyScroll="{x:Static biaui:Boxes.BoolTrue}" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:BiaTreeView}">
                    <controls:BiaClippingBorder x:Name="Bd"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                CornerRadius="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:BiaTreeView}}, Mode=OneWay, Path=CornerRadius}">
                        <ScrollViewer Padding="{TemplateBinding Padding}" Focusable="{x:Static biaui:Boxes.BoolFalse}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </controls:BiaClippingBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="{x:Static biaui:Boxes.BoolFalse}">
                <Setter Property="Background" Value="{DynamicResource InactiveBackgroundBrushKey}" />
                <Setter Property="BorderBrush" Value="{DynamicResource InactiveBorderBrushKey}" />
                <Setter Property="Foreground" Value="{DynamicResource InactiveForegroundBrushKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource DefaultTreeViewStyle}" TargetType="{x:Type controls:BiaTreeView}" />
</ResourceDictionary>