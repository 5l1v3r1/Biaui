<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:biaui="clr-namespace:Biaui"
                    xmlns:controls="clr-namespace:Biaui.Controls">
    <Style x:Key="DropDownToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrushKey}" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ContentPresenter Margin="{TemplateBinding Padding}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource ButtonActiveBorderBrushKey}" />
                <Setter Property="Foreground" Value="{DynamicResource ButtonActiveForegroundBrushKey}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource ButtonPressedBorderBrushKey}" />
                <Setter Property="Foreground" Value="{DynamicResource ButtonPressedForegroundBrushKey}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="BorderBrush" Value="{DynamicResource ButtonInactiveBorderBrushKey}" />
                <Setter Property="Foreground" Value="{DynamicResource ButtonInactiveForegroundBrushKey}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource ButtonInactiveBorderBrushKey}" />
                <Setter Property="Foreground" Value="{DynamicResource AccentForegroundBrushKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ComboBox}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource InactiveForegroundBrushKey}" />
            </Trigger>
        </Style.Triggers>

        <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundBrushKey}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrushKey}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBoxForegroundBrushKey}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="Height" Value="{x:Static biaui:Constants.BasicOneLineHeight}" />

        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ComboBoxItem}">
                    <Setter Property="SnapsToDevicePixels" Value="True" />
                    <Setter Property="OverridesDefaultStyle" Value="True" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />

                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                <Border Padding="1"
                                        Background="{TemplateBinding Background}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <ContentPresenter Margin="4,0,0,0" />
                                </Border>

                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource SubmenuItemBackgroundHighlighted}" />
                                    </Trigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="True" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="{DynamicResource Item.SelectedActive.Background}" />
                                        <Setter Property="BorderBrush" Value="{DynamicResource Item.SelectedActive.Border}" />
                                    </MultiTrigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="True" />
                                            <Condition Property="IsMouseOver" Value="True" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="{DynamicResource Item.SelectedActive.Background.IsMouseOver}" />
                                        <Setter Property="BorderBrush" Value="{DynamicResource Item.SelectedActive.Border.IsMouseOver}" />
                                    </MultiTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{x:Static biaui:Constants.BasicCornerRadius}">
                            <Grid Margin="-1">
                                <ToggleButton x:Name="toggleButton"
                                              ClickMode="Press"
                                              Focusable="False"
                                              Foreground="{DynamicResource InactiveForegroundBrushKey}"
                                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              IsTabStop="False"
                                              OverridesDefaultStyle="True"
                                              Style="{StaticResource DropDownToggleButtonStyle}">
                                    <ToggleButton.Template>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Border Background="Transparent">
                                                <Path Width="{x:Static SystemParameters.VerticalScrollBarWidth}"
                                                      HorizontalAlignment="Right"
                                                      VerticalAlignment="Center"
                                                      Data="M 0.0,0.0 L 3.5,4.0 7.0,0.0 z"
                                                      Fill="{TemplateBinding Foreground}" />
                                            </Border>
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                </ToggleButton>

                                <ContentPresenter Grid.Column="0"
                                                  Margin="4.5,2.25,26,2.25"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                  ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  IsHitTestVisible="False"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <ContentPresenter.Resources>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                                        </Style>
                                    </ContentPresenter.Resources>
                                </ContentPresenter>
                            </Grid>
                        </Border>

                        <Popup x:Name="PART_Popup"
                               MinWidth="{TemplateBinding ActualWidth}"
                               AllowsTransparency="True"
                               FocusVisualStyle="{x:Null}"
                               Focusable="False"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               Placement="Bottom"
                               PopupAnimation="None"
                               VerticalOffset="1">
                            <controls:BiaClippingBorder x:Name="dropdown"
                                                        MaxHeight="414"
                                                        Background="{DynamicResource SubmenuItemBackground}"
                                                        BorderBrush="{DynamicResource MenuItemHighlightedBackground}"
                                                        BorderThickness="1"
                                                        SnapsToDevicePixels="True">
                                <ScrollViewer VerticalScrollBarVisibility="Auto">
                                    <ItemsPresenter />
                                </ScrollViewer>
                            </controls:BiaClippingBorder>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="dropdown" Property="MinHeight" Value="100" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="toggleButton" Property="Foreground" Value="{DynamicResource AccentBrushKey}" />
                            <Setter TargetName="toggleButton" Property="BorderBrush" Value="{DynamicResource AccentBrushKey}" />
                            <Setter TargetName="toggleButton" Property="Background" Value="{DynamicResource BackgroundBrushKey}" />
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ActiveBackgroundBrushKey}" />
                        </Trigger>
                        <Trigger SourceName="PART_Popup" Property="IsOpen" Value="True">
                            <Setter TargetName="toggleButton" Property="Background" Value="{DynamicResource AccentBrushKey}" />
                            <Setter TargetName="toggleButton" Property="Foreground" Value="{DynamicResource AccentForegroundBrushKey}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource InactiveBorderBrushKey}" />
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource InactiveBackgroundBrushKey}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel KeyboardNavigation.DirectionalNavigation="Contained" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>