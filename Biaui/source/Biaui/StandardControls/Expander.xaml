<ResourceDictionary x:Class="Biaui.StandardControls.ExpanderEventHandler"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:internal="clr-namespace:Biaui.StandardControls.Internal"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:biaui="clr-namespace:Biaui">
    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Cursor" Value="Hand" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <StackPanel x:Name="Background"
                                Background="Transparent"
                                Orientation="Horizontal"
                                SnapsToDevicePixels="{x:Static biaui:Boxes.BoolFalse}">
                        <Path x:Name="arrow"
                              Width="{x:Static biaui:Boxes.Double10}"
                              Height="{x:Static biaui:Boxes.Double10}"
                              Margin="10,2,8,0"
                              HorizontalAlignment="{x:Static biaui:Boxes.HorizontalAlignmentCenter}"
                              VerticalAlignment="{x:Static biaui:Boxes.VerticalAlignmentCenter}"
                              Data="M 0 0 L 6.9 4 L 0 8 Z"
                              Fill="#A0A0A0"
                              SnapsToDevicePixels="{x:Static biaui:Boxes.BoolFalse}" />

                        <ContentPresenter Margin="2,0,0,0"
                                          HorizontalAlignment="{x:Static biaui:Boxes.HorizontalAlignmentLeft}"
                                          VerticalAlignment="{x:Static biaui:Boxes.VerticalAlignmentCenter}"
                                          RecognizesAccessKey="{x:Static biaui:Boxes.BoolTrue}"
                                          SnapsToDevicePixels="{x:Static biaui:Boxes.BoolTrue}" />
                    </StackPanel>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="{x:Static biaui:Boxes.BoolTrue}">
                            <Setter TargetName="arrow" Property="Data" Value="M 0 0 L 8 0 L 4 6.9 Z" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="{x:Static biaui:Boxes.BoolTrue}">
                            <Setter TargetName="arrow" Property="Fill" Value="#B0B0B0" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="{x:Static biaui:Boxes.BoolTrue}">
                            <Setter TargetName="arrow" Property="Fill" Value="#C0C0C0" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="{x:Static biaui:Boxes.BoolFalse}">
                            <Setter TargetName="arrow" Property="Fill" Value="{DynamicResource InactiveBackgroundBrushKey}" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="{x:Static biaui:Boxes.BoolTrue}">
                            <Setter TargetName="Background" Property="Background" Value="#14FFFFFF" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="{x:Static biaui:Boxes.BoolFalse}">
                            <Setter TargetName="Background" Property="Background" Value="#0CFFFFFF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <internal:ExpanderMultiplyConverter x:Key="Multiply" />

    <Style x:Key="DefaultExpanderStyle" TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="{x:Static biaui:Boxes.HorizontalAlignmentStretch}" />
        <Setter Property="VerticalContentAlignment" Value="{x:Static biaui:Boxes.VerticalAlignmentTop}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="{x:Static biaui:Boxes.Thickness0}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <StackPanel x:Name="Frame"
                                Loaded="Frame_OnLoaded"
                                PreviewMouseWheel="OnPreviewMouseWheel">
                        <StackPanel.Tag>
                            <system:Double>1.0</system:Double>
                        </StackPanel.Tag>

                        <StackPanel.Height>
                            <MultiBinding Converter="{StaticResource Multiply}">
                                <Binding ElementName="HeaderSite" Path="ActualHeight" />
                                <Binding ElementName="ExpandSite" Path="ActualHeight" />
                                <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                            </MultiBinding>
                        </StackPanel.Height>

                        <ToggleButton x:Name="HeaderSite"
                                      MinWidth="{x:Static biaui:Boxes.Double0}"
                                      MinHeight="{x:Static biaui:Boxes.Double0}"
                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Content="{TemplateBinding Header}"
                                      ContentTemplate="{TemplateBinding HeaderTemplate}"
                                      ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                      FontFamily="{TemplateBinding FontFamily}"
                                      FontSize="{TemplateBinding FontSize}"
                                      FontStretch="{TemplateBinding FontStretch}"
                                      FontStyle="{TemplateBinding FontStyle}"
                                      FontWeight="{TemplateBinding FontWeight}"
                                      Foreground="{TemplateBinding Foreground}"
                                      IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{StaticResource ExpanderDownHeaderStyle}" />

                        <ContentPresenter x:Name="ExpandSite"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Focusable="{x:Static biaui:Boxes.BoolFalse}" />
                    </StackPanel>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="{x:Static biaui:Boxes.BoolFalse}">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>

                        <Trigger Property="IsExpanded" Value="{x:Static biaui:Boxes.BoolTrue}">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Frame"
                                                         Storyboard.TargetProperty="Tag"
                                                         To="{x:Static biaui:Boxes.Double1}"
                                                         Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Frame"
                                                         Storyboard.TargetProperty="Tag"
                                                         To="{x:Static biaui:Boxes.Double0}"
                                                         Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultExpanderStyle}" TargetType="{x:Type Expander}" />
</ResourceDictionary>