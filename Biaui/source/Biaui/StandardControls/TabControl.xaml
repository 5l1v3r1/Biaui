<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:biaui="clr-namespace:Biaui"
                    xmlns:controls="clr-namespace:Biaui.Controls"
                    xmlns:internal="clr-namespace:Biaui.StandardControls.Internal"
                    xmlns:internals="clr-namespace:Biaui.Internals"
                    xmlns:standardControls="clr-namespace:Biaui.StandardControls">
    <ResourceDictionary.MergedDictionaries>
        <internals:SharedResourceDictionary Source="pack://application:,,,/Biaui;component/StandardControls/Button.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="TabAddButtonStyle"
           BasedOn="{StaticResource SharpButtonStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="Content" Value="+" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="6,-2,7,0" />
        <Setter Property="Margin" Value="{x:Static biaui:Boxes.Thickness0}" />
        <Setter Property="Visibility" Value="{x:Static biaui:Boxes.VisibilityCollapsed}" />

        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="{x:Static biaui:Boxes.BoolTrue}">
                <Setter Property="Foreground" Value="{DynamicResource ButtonActiveForegroundBrushKey}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="{x:Static biaui:Boxes.BoolTrue}">
                <Setter Property="Foreground" Value="{DynamicResource ButtonPressedForegroundBrushKey}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="{x:Static biaui:Boxes.BoolFalse}">
                <Setter Property="Foreground" Value="{DynamicResource InactiveForegroundBrushKey}" />
                <Setter Property="Background" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type TabControl}">
        <Setter Property="Padding" Value="{x:Static biaui:Boxes.Thickness2}" />
        <Setter Property="HorizontalContentAlignment" Value="{x:Static biaui:Boxes.HorizontalAlignmentCenter}" />
        <Setter Property="VerticalContentAlignment" Value="{x:Static biaui:Boxes.VerticalAlignmentCenter}" />
        <Setter Property="Background" Value="{DynamicResource PanelBackgroundBrushKey}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrushKey}" />
        <Setter Property="BorderThickness" Value="{x:Static biaui:Boxes.Thickness1}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid x:Name="templateRoot"
                          KeyboardNavigation.TabNavigation="Local"
                          SnapsToDevicePixels="{x:Static biaui:Boxes.BoolTrue}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="{x:Static biaui:Boxes.GridLengthAuto}" />
                            <RowDefinition x:Name="RowDefinition1" Height="{x:Static biaui:Boxes.GridLengthStar}" />
                        </Grid.RowDefinitions>

                        <DockPanel x:Name="headerPanel"
                                   Grid.Row="{x:Static biaui:Boxes.Int0}"
                                   Grid.Column="{x:Static biaui:Boxes.Int0}"
                                   Panel.ZIndex="{x:Static biaui:Boxes.Int1}">

                            <internal:TabPanelInternal x:Name="TabPanel"
                                                       HorizontalAlignment="{x:Static biaui:Boxes.HorizontalAlignmentLeft}"
                                                       Background="Transparent"
                                                       DockPanel.Dock="{x:Static biaui:Boxes.DockLeft}"
                                                       IsItemsHost="{x:Static biaui:Boxes.BoolTrue}"
                                                       KeyboardNavigation.TabIndex="{x:Static biaui:Boxes.Int1}" />

                            <Button x:Name="AddButton"
                                    HorizontalAlignment="{x:Static biaui:Boxes.HorizontalAlignmentLeft}"
                                    VerticalAlignment="{x:Static biaui:Boxes.VerticalAlignmentBottom}"
                                    Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabControl}}, Mode=OneWay, Path=(standardControls:TabControlAttachedProperties.AddCommand)}"
                                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabControl}}, Mode=OneWay, Path=(standardControls:TabControlAttachedProperties.AddCommandParameter)}"
                                    Style="{StaticResource TabAddButtonStyle}" />
                        </DockPanel>

                        <controls:BiaClippingBorder x:Name="contentPanel"
                                                    Grid.Row="{x:Static biaui:Boxes.Int1}"
                                                    Grid.Column="{x:Static biaui:Boxes.Int0}"
                                                    Padding="4,0"
                                                    Background="{TemplateBinding Background}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                                    KeyboardNavigation.TabIndex="{x:Static biaui:Boxes.Int2}"
                                                    KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              Margin="{TemplateBinding Padding}"
                                              ContentSource="SelectedContent"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </controls:BiaClippingBorder>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="standardControls:TabControlAttachedProperties.IsVisibleAddButton" Value="{x:Static biaui:Boxes.BoolTrue}">
                            <Setter TargetName="AddButton" Property="Visibility" Value="{x:Static biaui:Boxes.VisibilityVisible}" />
                        </Trigger>

                        <Trigger Property="TabStripPlacement" Value="Top">
                            <Setter TargetName="contentPanel" Property="CornerRadius">
                                <Setter.Value>
                                    <CornerRadius BottomLeft="{x:Static biaui:Boxes.GroupCornerRadiusPrim}"
                                                  BottomRight="{x:Static biaui:Boxes.GroupCornerRadiusPrim}"
                                                  TopLeft="{x:Static biaui:Boxes.Double0}"
                                                  TopRight="{x:Static biaui:Boxes.Double0}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="contentPanel" Property="CornerRadius">
                                <Setter.Value>
                                    <CornerRadius BottomLeft="{x:Static biaui:Boxes.Double0}"
                                                  BottomRight="{x:Static biaui:Boxes.Double0}"
                                                  TopLeft="{x:Static biaui:Boxes.GroupCornerRadiusPrim}"
                                                  TopRight="{x:Static biaui:Boxes.GroupCornerRadiusPrim}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="headerPanel" Property="Grid.Row" Value="{x:Static biaui:Boxes.Int1}" />
                            <Setter TargetName="contentPanel" Property="Grid.Row" Value="{x:Static biaui:Boxes.Int0}" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="{x:Static biaui:Boxes.GridLengthStar}" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="{x:Static biaui:Boxes.GridLengthAuto}" />

                            <Setter TargetName="AddButton" Property="VerticalAlignment" Value="{x:Static biaui:Boxes.VerticalAlignmentTop}" />
                        </Trigger>

                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter TargetName="contentPanel" Property="CornerRadius">
                                <Setter.Value>
                                    <CornerRadius BottomLeft="{x:Static biaui:Boxes.Double0}"
                                                  BottomRight="{x:Static biaui:Boxes.GroupCornerRadiusPrim}"
                                                  TopLeft="{x:Static biaui:Boxes.Double0}"
                                                  TopRight="{x:Static biaui:Boxes.GroupCornerRadiusPrim}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="headerPanel" Property="Grid.Row" Value="{x:Static biaui:Boxes.Int0}" />
                            <Setter TargetName="contentPanel" Property="Grid.Row" Value="{x:Static biaui:Boxes.Int0}" />
                            <Setter TargetName="headerPanel" Property="Grid.Column" Value="{x:Static biaui:Boxes.Int0}" />
                            <Setter TargetName="contentPanel" Property="Grid.Column" Value="{x:Static biaui:Boxes.Int1}" />
                            <Setter TargetName="ColumnDefinition0" Property="Width" Value="{x:Static biaui:Boxes.GridLengthAuto}" />
                            <Setter TargetName="ColumnDefinition1" Property="Width" Value="{x:Static biaui:Boxes.GridLengthStar}" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="{x:Static biaui:Boxes.GridLengthStar}" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="0" />

                            <Setter TargetName="TabPanel" Property="DockPanel.Dock" Value="{x:Static biaui:Boxes.DockTop}" />
                            <Setter TargetName="AddButton" Property="HorizontalAlignment" Value="{x:Static biaui:Boxes.HorizontalAlignmentRight}" />
                            <Setter TargetName="AddButton" Property="VerticalAlignment" Value="{x:Static biaui:Boxes.VerticalAlignmentTop}" />
                        </Trigger>

                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter TargetName="contentPanel" Property="CornerRadius">
                                <Setter.Value>
                                    <CornerRadius BottomLeft="{x:Static biaui:Boxes.GroupCornerRadiusPrim}"
                                                  BottomRight="{x:Static biaui:Boxes.Double0}"
                                                  TopLeft="{x:Static biaui:Boxes.GroupCornerRadiusPrim}"
                                                  TopRight="{x:Static biaui:Boxes.Double0}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="headerPanel" Property="Grid.Row" Value="{x:Static biaui:Boxes.Int0}" />
                            <Setter TargetName="contentPanel" Property="Grid.Row" Value="{x:Static biaui:Boxes.Int0}" />
                            <Setter TargetName="headerPanel" Property="Grid.Column" Value="{x:Static biaui:Boxes.Int1}" />
                            <Setter TargetName="contentPanel" Property="Grid.Column" Value="{x:Static biaui:Boxes.Int0}" />
                            <Setter TargetName="ColumnDefinition0" Property="Width" Value="{x:Static biaui:Boxes.GridLengthStar}" />
                            <Setter TargetName="ColumnDefinition1" Property="Width" Value="{x:Static biaui:Boxes.GridLengthAuto}" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="{x:Static biaui:Boxes.GridLengthStar}" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="0" />

                            <Setter TargetName="TabPanel" Property="DockPanel.Dock" Value="{x:Static biaui:Boxes.DockTop}" />
                            <Setter TargetName="AddButton" Property="HorizontalAlignment" Value="{x:Static biaui:Boxes.HorizontalAlignmentLeft}" />
                            <Setter TargetName="AddButton" Property="VerticalAlignment" Value="{x:Static biaui:Boxes.VerticalAlignmentTop}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="{x:Static biaui:Boxes.BoolFalse}">
                <Setter Property="Background" Value="{DynamicResource InactiveBackgroundBrushKey}" />
                <Setter Property="BorderBrush" Value="{DynamicResource InactiveBorderBrushKey}" />
                <Setter Property="Foreground" Value="{DynamicResource InactiveForegroundBrushKey}" />
            </Trigger>

            <Trigger Property="standardControls:TabControlAttachedProperties.IsVisibleAddButton" Value="{x:Static biaui:Boxes.BoolTrue}">
                <Setter Property="Visibility" Value="{x:Static biaui:Boxes.VisibilityVisible}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TabItemFocusVisualStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="{x:Static biaui:Boxes.Thickness2}"
                               SnapsToDevicePixels="{x:Static biaui:Boxes.BoolTrue}"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               StrokeDashArray="1 2"
                               StrokeThickness="{x:Static biaui:Boxes.Double1}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabItemTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrushKey}" />
        <Setter Property="Margin" Value="{x:Static biaui:Boxes.Thickness0}" />
        <Setter Property="Padding" Value="{x:Static biaui:Boxes.Thickness0}" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TabItem}}}" Value="{x:Static biaui:Boxes.BoolFalse}">
                <Setter Property="TextElement.Foreground" Value="{DynamicResource SemiForegroundBrushKey}" />
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TabItem}}}" Value="{x:Static biaui:Boxes.BoolFalse}" />
                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType={x:Type TabItem}}}" Value="{x:Static biaui:Boxes.BoolTrue}" />
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type TabItem}}}" Value="{x:Static biaui:Boxes.BoolTrue}" />
                </MultiDataTrigger.Conditions>

                <Setter Property="TextElement.Foreground" Value="{DynamicResource SemiForegroundBrushKey.MouseOver}" />
            </MultiDataTrigger>

            <Trigger Property="IsEnabled" Value="{x:Static biaui:Boxes.BoolFalse}">
                <Setter Property="Foreground" Value="{DynamicResource InactiveForegroundBrushKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TabItemBiaTextBlockStyle" TargetType="{x:Type controls:BiaTextBlock}">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrushKey}" />
        <Setter Property="Margin" Value="{x:Static biaui:Boxes.Thickness0}" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TabItem}}}" Value="{x:Static biaui:Boxes.BoolFalse}">
                <Setter Property="Foreground" Value="{DynamicResource SemiForegroundBrushKey}" />
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TabItem}}}" Value="{x:Static biaui:Boxes.BoolFalse}" />
                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType={x:Type TabItem}}}" Value="{x:Static biaui:Boxes.BoolTrue}" />
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type TabItem}}}" Value="{x:Static biaui:Boxes.BoolTrue}" />
                </MultiDataTrigger.Conditions>

                <Setter Property="Foreground" Value="{DynamicResource SemiForegroundBrushKey.MouseOver}" />
            </MultiDataTrigger>

            <Trigger Property="IsEnabled" Value="{x:Static biaui:Boxes.BoolFalse}">
                <Setter Property="Foreground" Value="{DynamicResource InactiveForegroundBrushKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TabItemBiaEditableTextBlockStyle" TargetType="{x:Type controls:BiaEditableTextBlock}">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrushKey}" />
        <Setter Property="Margin" Value="{x:Static biaui:Boxes.Thickness0}" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TabItem}}}" Value="{x:Static biaui:Boxes.BoolFalse}">
                <Setter Property="Foreground" Value="{DynamicResource SemiForegroundBrushKey}" />
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TabItem}}}" Value="{x:Static biaui:Boxes.BoolFalse}" />
                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType={x:Type TabItem}}}" Value="{x:Static biaui:Boxes.BoolTrue}" />
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type TabItem}}}" Value="{x:Static biaui:Boxes.BoolTrue}" />
                </MultiDataTrigger.Conditions>

                <Setter Property="Foreground" Value="{DynamicResource SemiForegroundBrushKey.MouseOver}" />
            </MultiDataTrigger>

            <Trigger Property="IsEnabled" Value="{x:Static biaui:Boxes.BoolFalse}">
                <Setter Property="Foreground" Value="{DynamicResource InactiveForegroundBrushKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type TabItem}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisualStyle}" />
        <Setter Property="Background" Value="{DynamicResource PanelBackgroundBrushKey}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrushKey}" />
        <Setter Property="Margin" Value="{x:Static biaui:Boxes.Thickness0}" />
        <Setter Property="Padding" Value="{x:Static biaui:Boxes.Thickness0}" />
        <Setter Property="HorizontalContentAlignment" Value="{x:Static biaui:Boxes.HorizontalAlignmentStretch}" />
        <Setter Property="VerticalContentAlignment" Value="{x:Static biaui:Boxes.VerticalAlignmentStretch}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <controls:BiaClippingBorder x:Name="MainBorder"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}">

                        <Border x:Name="SelectionBorder" BorderBrush="{DynamicResource Item.SelectedActive.Background}">

                            <ContentPresenter x:Name="contentPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                              VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                              ContentSource="Header"
                                              Focusable="{x:Static biaui:Boxes.BoolFalse}"
                                              RecognizesAccessKey="{x:Static biaui:Boxes.BoolTrue}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <ContentPresenter.Resources>
                                    <Style BasedOn="{StaticResource TabItemTextBlockStyle}" TargetType="{x:Type TextBlock}" />
                                    <Style BasedOn="{StaticResource TabItemBiaTextBlockStyle}" TargetType="{x:Type controls:BiaTextBlock}" />
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                        </Border>
                    </controls:BiaClippingBorder>

                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Top">
                            <Setter Property="Margin" Value="0,0,0,-1" />
                            <Setter Property="Padding" Value="10,3" />
                            <Setter TargetName="MainBorder" Property="CornerRadius">
                                <Setter.Value>
                                    <CornerRadius BottomLeft="{x:Static biaui:Boxes.Double0}"
                                                  BottomRight="{x:Static biaui:Boxes.Double0}"
                                                  TopLeft="{x:Static biaui:Boxes.BasicCornerRadiusPrim}"
                                                  TopRight="{x:Static biaui:Boxes.BasicCornerRadiusPrim}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="MainBorder" Property="BorderThickness" Value="1,1,1,0" />

                            <Setter TargetName="SelectionBorder" Property="BorderThickness" Value="0,1,0,0" />
                        </Trigger>

                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Margin" Value="0,-1,0,0" />
                            <Setter Property="Padding" Value="10,3" />
                            <Setter TargetName="MainBorder" Property="CornerRadius">
                                <Setter.Value>
                                    <CornerRadius BottomLeft="{x:Static biaui:Boxes.BasicCornerRadiusPrim}"
                                                  BottomRight="{x:Static biaui:Boxes.BasicCornerRadiusPrim}"
                                                  TopLeft="{x:Static biaui:Boxes.Double0}"
                                                  TopRight="{x:Static biaui:Boxes.Double0}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="MainBorder" Property="BorderThickness" Value="1,0,1,1" />

                            <Setter TargetName="SelectionBorder" Property="BorderThickness" Value="0,0,0,1" />
                        </Trigger>

                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Margin" Value="0,0,-1,0" />
                            <Setter Property="Padding" Value="10,3" />
                            <Setter TargetName="MainBorder" Property="CornerRadius">
                                <Setter.Value>
                                    <CornerRadius BottomLeft="{x:Static biaui:Boxes.BasicCornerRadiusPrim}"
                                                  BottomRight="{x:Static biaui:Boxes.Double0}"
                                                  TopLeft="{x:Static biaui:Boxes.BasicCornerRadiusPrim}"
                                                  TopRight="{x:Static biaui:Boxes.Double0}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="MainBorder" Property="BorderThickness" Value="1,1,0,1" />

                            <Setter TargetName="SelectionBorder" Property="BorderThickness" Value="1,0,0,0" />
                        </Trigger>

                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Margin" Value="-1,0,0,0" />
                            <Setter Property="Padding" Value="10,3" />
                            <Setter TargetName="MainBorder" Property="CornerRadius">
                                <Setter.Value>
                                    <CornerRadius BottomLeft="{x:Static biaui:Boxes.Double0}"
                                                  BottomRight="{x:Static biaui:Boxes.BasicCornerRadiusPrim}"
                                                  TopLeft="{x:Static biaui:Boxes.Double0}"
                                                  TopRight="{x:Static biaui:Boxes.BasicCornerRadiusPrim}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="MainBorder" Property="BorderThickness" Value="0,1,1,1" />

                            <Setter TargetName="SelectionBorder" Property="BorderThickness" Value="0,0,1,0" />
                        </Trigger>

                        <Trigger Property="IsSelected" Value="{x:Static biaui:Boxes.BoolTrue}">
                            <Setter Property="Background" Value="{DynamicResource PanelBackgroundBrushKey}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrushKey}" />
                        </Trigger>

                        <Trigger Property="IsSelected" Value="{x:Static biaui:Boxes.BoolFalse}">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />

                            <Setter TargetName="SelectionBorder" Property="BorderBrush" Value="Transparent" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="{x:Static biaui:Boxes.BoolFalse}" />
                                <Condition Property="IsSelected" Value="{x:Static biaui:Boxes.BoolFalse}" />
                            </MultiTrigger.Conditions>

                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />

                            <Setter TargetName="SelectionBorder" Property="BorderBrush" Value="Transparent" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="{x:Static biaui:Boxes.BoolFalse}" />
                                <Condition Property="IsSelected" Value="{x:Static biaui:Boxes.BoolTrue}" />
                            </MultiTrigger.Conditions>

                            <Setter Property="Background" Value="{DynamicResource BackgroundBackgroundBrushKey}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrushKey}" />

                            <Setter TargetName="SelectionBorder" Property="BorderBrush" Value="Transparent" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>