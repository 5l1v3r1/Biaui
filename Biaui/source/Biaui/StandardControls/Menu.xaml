<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Biaui.Controls"
                    xmlns:biaui="clr-namespace:Biaui">

    <Style x:Key="MenuItemBaseStyle" TargetType="{x:Type MenuItem}">
        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Menu}}}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Border"
                            Background="Transparent"
                            BorderThickness="{x:Static biaui:Boxes.Thickness0}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnIcon"
                                                  Width="{x:Static biaui:Boxes.GridLengthAuto}"
                                                  MinWidth="{x:Static biaui:Boxes.Double20}"
                                                  SharedSizeGroup="ColumnGroupIcon" />
                                <ColumnDefinition Width="{x:Static biaui:Boxes.GridLengthAuto}" SharedSizeGroup="ColumnGroupHeader" />
                                <ColumnDefinition Width="{x:Static biaui:Boxes.GridLengthAuto}" SharedSizeGroup="ColumnGroupInputGesture" />
                                <ColumnDefinition x:Name="ColumnArrow" Width="14" />
                            </Grid.ColumnDefinitions>

                            <ContentPresenter x:Name="IconPresenter"
                                              Grid.Column="{x:Static biaui:Boxes.Int0}"
                                              VerticalAlignment="{x:Static biaui:Boxes.VerticalAlignmentCenter}"
                                              ContentSource="Icon" />

                            <ContentPresenter Grid.Column="{x:Static biaui:Boxes.Int1}"
                                              Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="{x:Static biaui:Boxes.VerticalAlignmentCenter}"
                                              ContentSource="Header"
                                              RecognizesAccessKey="{x:Static biaui:Boxes.BoolTrue}" />

                            <ContentPresenter x:Name="InputGesturePresenter"
                                              Grid.Column="{x:Static biaui:Boxes.Int2}"
                                              Margin="24,1,8,1"
                                              VerticalAlignment="{x:Static biaui:Boxes.VerticalAlignmentCenter}"
                                              ContentSource="InputGestureText" />

                            <Path x:Name="Arrow"
                                  Grid.Column="{x:Static biaui:Boxes.Int3}"
                                  Margin="4,0,6,0"
                                  HorizontalAlignment="{x:Static biaui:Boxes.HorizontalAlignmentRight}"
                                  VerticalAlignment="{x:Static biaui:Boxes.VerticalAlignmentCenter}"
                                  Data="M 4 0 L 8 4 L 4 8 Z"
                                  Fill="{DynamicResource ForegroundBrushKey}" />

                            <Popup x:Name="SubMenuPopup"
                                   Grid.Column="{x:Static biaui:Boxes.Int0}"
                                   AllowsTransparency="{x:Static biaui:Boxes.BoolTrue}"
                                   Focusable="{x:Static biaui:Boxes.BoolFalse}"
                                   HorizontalOffset="-1"
                                   IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                   Placement="Right"
                                   PopupAnimation="None"
                                   SnapsToDevicePixels="{x:Static biaui:Boxes.BoolTrue}"
                                   UseLayoutRounding="{x:Static biaui:Boxes.BoolTrue}">

                                <controls:BiaClippingBorder Margin="0,0,8,8"
                                                            Background="{DynamicResource SubmenuItemBackground}"
                                                            BorderBrush="{DynamicResource MenuItemHighlightedBackground}"
                                                            BorderThickness="{x:Static biaui:Boxes.Thickness1}"
                                                            SnapsToDevicePixels="{x:Static biaui:Boxes.BoolTrue}"
                                                            UseLayoutRounding="{x:Static biaui:Boxes.BoolTrue}">
                                    <StackPanel Grid.IsSharedSizeScope="{x:Static biaui:Boxes.BoolTrue}"
                                                IsItemsHost="{x:Static biaui:Boxes.BoolTrue}"
                                                KeyboardNavigation.DirectionalNavigation="Cycle" />

                                    <Border.Effect>
                                        <DropShadowEffect ShadowDepth="{x:Static biaui:Boxes.Double2}" Color="Black" />
                                    </Border.Effect>
                                </controls:BiaClippingBorder>
                            </Popup>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Padding" Value="8,4" />
                            <Setter TargetName="SubMenuPopup" Property="Placement" Value="Bottom" />
                            <Setter TargetName="ColumnIcon" Property="MinWidth" Value="{x:Static biaui:Boxes.Double0}" />
                            <Setter TargetName="ColumnArrow" Property="Width" Value="Auto" />
                            <Setter TargetName="IconPresenter" Property="Visibility" Value="{x:Static biaui:Boxes.VisibilityCollapsed}" />
                            <Setter TargetName="InputGesturePresenter" Property="Visibility" Value="{x:Static biaui:Boxes.VisibilityCollapsed}" />
                            <Setter TargetName="Arrow" Property="Visibility" Value="{x:Static biaui:Boxes.VisibilityCollapsed}" />
                        </Trigger>

                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Padding" Value="8,4" />
                            <Setter TargetName="ColumnIcon" Property="MinWidth" Value="{x:Static biaui:Boxes.Double0}" />
                            <Setter TargetName="ColumnArrow" Property="Width" Value="Auto" />
                            <Setter TargetName="IconPresenter" Property="Visibility" Value="{x:Static biaui:Boxes.VisibilityCollapsed}" />
                            <Setter TargetName="InputGesturePresenter" Property="Visibility" Value="{x:Static biaui:Boxes.VisibilityCollapsed}" />
                            <Setter TargetName="Arrow" Property="Visibility" Value="{x:Static biaui:Boxes.VisibilityCollapsed}" />
                        </Trigger>

                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter Property="DockPanel.Dock" Value="{x:Static biaui:Boxes.DockTop}" />
                            <Setter Property="Padding" Value="12,4,0,4" />
                            <Setter TargetName="Border" Property="MinHeight" Value="{x:Static biaui:Boxes.Double24}" />
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource SubmenuItemBackground}" />
                        </Trigger>

                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="DockPanel.Dock" Value="{x:Static biaui:Boxes.DockTop}" />
                            <Setter Property="Padding" Value="12,4,0,4" />
                            <Setter TargetName="Arrow" Property="Visibility" Value="{x:Static biaui:Boxes.VisibilityCollapsed}" />
                            <Setter TargetName="Border" Property="MinHeight" Value="{x:Static biaui:Boxes.Double24}" />
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource SubmenuItemBackground}" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="{x:Static biaui:Boxes.BoolTrue}" />
                                <Condition Property="Role" Value="TopLevelHeader" />
                            </MultiTrigger.Conditions>

                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource MenuItemHighlightedBackground}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="{x:Static biaui:Boxes.BoolTrue}" />
                                <Condition Property="Role" Value="TopLevelItem" />
                            </MultiTrigger.Conditions>

                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource MenuItemHighlightedBackground}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="{x:Static biaui:Boxes.BoolTrue}" />
                                <Condition Property="Role" Value="SubmenuHeader" />
                            </MultiTrigger.Conditions>

                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource SubmenuItemBackgroundHighlighted}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="{x:Static biaui:Boxes.BoolTrue}" />
                                <Condition Property="Role" Value="SubmenuItem" />
                            </MultiTrigger.Conditions>

                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource SubmenuItemBackgroundHighlighted}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSubmenuOpen" Value="{x:Static biaui:Boxes.BoolTrue}" />
                                <Condition Property="Role" Value="TopLevelHeader" />
                            </MultiTrigger.Conditions>

                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource SubmenuItemBackground}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource MenuSeparatorBorderBrush}" />
                        </MultiTrigger>

                        <Trigger Property="IsSubmenuOpen" Value="{x:Static biaui:Boxes.BoolTrue}">
                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource AccentBrushKey}" />
                        </Trigger>

                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="IconPresenter" Property="Visibility" Value="{x:Static biaui:Boxes.VisibilityCollapsed}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="{x:Static biaui:Boxes.BoolFalse}">
                            <Setter Property="Foreground" Value="{DynamicResource InactiveForegroundBrushKey}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Menu}">
        <Setter Property="FontFamily" Value="{DynamicResource BiauiFontFamily}" />
        <Setter Property="Background" Value="Transparent" />

        <Style.Resources>
            <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
                <Setter Property="Height" Value="{x:Static biaui:Boxes.Double1}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Separator}">
                            <Rectangle Fill="{DynamicResource MenuSeparatorBorderBrush}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style BasedOn="{StaticResource MenuItemBaseStyle}" TargetType="{x:Type MenuItem}" />
        </Style.Resources>
    </Style>
</ResourceDictionary>